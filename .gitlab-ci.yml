linux-x86_64:
  stage: build
  image: debian
  before_script:
    - apt update && apt -y install gcc ninja-build python3-pip libobs-dev libgstreamer-plugins-base1.0-dev
    - pip3 install meson
  script:
    - CFLAGS=-DOLD_OBS_API meson --buildtype release linux
    - ninja -C linux
  artifacts:
    paths:
      - linux/gstreamer.so

macos-x86_64:
  stage: build
  image: fzwoch/docker-macos
  before_script:
    - apt update && apt -y install ninja-build python3-pip p7zip-full wget
    - pip3 install meson
  script:
    - export MACOSX_DEPLOYMENT_TARGET=10.8
    - echo -n "packages.macports.org" > /opt/osxcross/target/macports/MIRROR
    - osxcross-macports update-cache
    - osxcross-macports install gstreamer1 gstreamer1-gst-plugins-base

    - wget https://github.com/obsproject/obs-studio/releases/download/22.0.3/obs-mac-22.0.3-installer.pkg
    - wget https://github.com/obsproject/obs-studio/archive/22.0.2.tar.gz

    - 7z x obs-mac-22.0.3-installer.pkg
    - 7z x OBS.pkg
    - 7z x Payload~
    - tar xzvf 22.0.2.tar.gz

    - cp Applications/OBS.app/Contents/Resources/bin/libobs.0.dylib Applications/OBS.app/Contents/Resources/bin/libobs.dylib
    - ln -s obs-studio-22.0.2/libobs/ obs

    - echo "[binaries]" >> cross.txt
    - echo "c = 'x86_64-apple-darwin15-cc'" >> cross.txt
    - echo "cpp = 'x86_64-apple-darwin15-c++'" >> cross.txt
    - echo "ar = 'x86_64-apple-darwin15-ar'" >> cross.txt
    - echo "strip = 'x86_64-apple-darwin15-strip'" >> cross.txt
    - echo "pkgconfig = 'x86_64-apple-darwin15-pkg-config'" >> cross.txt

    - echo "[host_machine]" >> cross.txt
    - echo "system = 'darwin'" >> cross.txt
    - echo "cpu_family = 'x86_64'" >> cross.txt
    - echo "cpu = 'x86_64'" >> cross.txt
    - echo "endian = 'little'" >> cross.txt

    - meson --buildtype release --cross-file cross.txt macos
    - ninja -C macos
  artifacts:
    paths:
      - macos/gstreamer.dylib

windows-x86_64:
  stage: build
  image: debian
  before_script:
    - apt update && apt -y install mingw-w64 mingw-w64-tools ninja-build python3-pip unzip wget wine
    - pip3 install meson
  script:
    - wget https://github.com/obsproject/obs-studio/releases/download/22.0.2/OBS-Studio-22.0.2-Full-x64.zip
    - wget https://github.com/obsproject/obs-studio/archive/22.0.2.tar.gz

    - unzip OBS-Studio-22.0.2-Full-x64.zip
    - tar xzvf 22.0.2.tar.gz

    - ln -s obs-studio-22.0.2/libobs/ obs

    - wget https://gstreamer.freedesktop.org/data/pkg/windows/1.14.4/gstreamer-1.0-devel-x86_64-1.14.4.msi
    - wget https://gstreamer.freedesktop.org/data/pkg/windows/1.14.4/gstreamer-1.0-x86_64-1.14.4.msi

    - msiexec -passive -i gstreamer-1.0-x86_64-1.14.4.msi
    - msiexec -passive -i gstreamer-1.0-devel-x86_64-1.14.4.msi

    - ln -s ~/.wine/drive_c/ /c

    - export PKG_CONFIG_PATH=/c/gstreamer/1.0/x86_64/lib/pkgconfig/

    - echo "[binaries]" >> cross.txt
    - echo "c = 'x86_64-w64-mingw32-gcc'" >> cross.txt
    - echo "cpp = 'x86_64-w64-mingw32-g++'" >> cross.txt
    - echo "ar = 'x86_64-w64-mingw32-ar'" >> cross.txt
    - echo "strip = 'x86_64-w64-mingw32-strip'" >> cross.txt
    - echo "pkgconfig = 'x86_64-w64-mingw32-pkg-config'" >> cross.txt
    - echo "windres = 'x86_64-w64-mingw32-windres'" >> cross.txt

    - echo "[host_machine]" >> cross.txt
    - echo "system = 'windows'" >> cross.txt
    - echo "cpu_family = 'x86_64'" >> cross.txt
    - echo "cpu = 'x86_64'" >> cross.txt
    - echo "endian = 'little'" >> cross.txt

    - meson --buildtype release --cross-file cross.txt windows
    - ninja -C windows
  artifacts:
    paths:
      - windows/gstreamer.dll
